call SCRN2
call clear
call screen2(2)
call autochar

dim GEnc(9),ass(5),bl(30)

gosub title
gosub init

repeat
  gosub shop
  repeat
    gosub map
    gosub drive
    gosub HouseGhost
  until pk>=9999
  gosub final
  display at(16,5):"Play again? (Y/N)"
  CALL DISPLY(23,2,"@2023 by S.Bauch & H.Spahrbier")
  repeat
    call key(3,k,s)
  until s=1
until k=78
end

title:
  CALL VWRITE(2432,BIN$("038D1A900F038D1A9F05038D1A900F038D1A9F05038415900A038114900A038E11900F038E119F0503800F900F03830E9F0503830E900F03830E9F05038114900F0381149F05038114900F0381149F05" )
  CALL VWRITE(2512,BIN$("038D1A900F038D1A9F05038D1A900F038D1A9F05038415900A038114900A038E11900F038E119F0503800F900F03830E9F0503830E900F03830E9F0503811490140381149F14039FBFDF01000980" )
  // CALL PLAY(2432)
  call magnify(4)
  call char(116,#CHAR3064:4)
  call char(120,#CHAR3068:4)
  call sprite(#1,116,9, 50,112,#2,120,15, 50,112)
  display at(13,9):"Ghostbusters!"
  repeat
    call key(3,k,s)
    call key(1,k,s1)
  until s=1 or s1=1
  call delsprite(all)
  ac=50
return

init:
  pk=0
  for i=0 to 29
    bl(i)=0
  next i
 dy1 = 145 :: dx1 = 121
 HN=15
 GOSUB NextBlinkHouse
 HQ=0
 pkmm = 5000 + 500*rnd  // Marshmallows first appearance
 AC = 50  // Account: $ / 50 (=5.000$)
 for i=1 to 5 :: ASS(i)=0 :: next i
 //ASS(5)=5
 CALL CHAR2(64,"3C4299A1A199423C")
return

// *** SHOP ***
shop:
  call clear
  call magnify(3)
  display at(10,1):"Do you have an account?"
  accept at(10,26) Validate("YN"):a$
  if a$="Y" then begin
    display at(13,1):"Account number:"
    accept at(13,16) Validate("0123456789"):a$
    gosub decode
    if ac=0 then display at(16,1):"Invalid account number.":: ac=50
    display at(18,1):"Your balance: $"&str$(ac)&"00"
  end else display at(18,1):"Your credit is $5000"
  call waitkey
  call clear
  display at(1,10):"Equipment"
  display at( 5,2):"PK Energy Detector $800" // 1
  display at( 7,2):"Bait               $400" // 2
  display at( 9,2):"Ghost Vacuum       $500" // 3
  display at(11,2):"Image Intensifier  $800" // 4
  display at(13,2):"Traps              $600 x 0" // 5
  display at(15,2):"Done Shopping"
  display at(20,2):"Credit           $  "&str$(AC)&"00"
  call char(116,#CHAR3112:4)
  call sprite(#1,116,15,33,4)
  call color2(18,4,2)
  GY=33
  repeat
    call key(1,k,s)
  until s=0
  repeat
    call joyst(1,x,y)::call key(1,k,s)
    gy=gy-y*4-16*(k=0)+16*(k=5)
    if gy>113 or gy<33 then gy=33
    if s<>0 or y<>0 then call delay(200)
    call locate(#1,gy,4)
    gx=(gy-17)/16
    if k=18 and gy<97 then ass(gx)=-(ass(gx)=0) :: call hchar(3+gx*2,30,167+ass(gx))
    if k=18 and gy=97 then ass(gx)=-(ass(gx)+1)*(ass(gx)<9) :: call hchar(3+gx*2,30,48+ass(gx))
    E = AC - ass(1)*8 - ass(2)*4 - ass(3)*5 - ass(4)*8 - ass(5)*6
    display at(20,22):str$(E)&"00"
    if k=18 and gy=113 and E<0 then begin
      display at(17,4):"Insufficient funding!"
      call sound(600,110,0,220,4,440,8)
      call delay(2000)
      call hchar(17,1,32,32)
      k=0
    end
  until k=18 and gy=113
  AC=E :: TR=ass(5)
  call delsprite(#1)
return


// *** MAP ***

map:
  call clear
  call magnify(3)
  call char(116,#CHAR3064:4)
  call char(120,#CHAR3068:4)
  call char(124,#CHAR3072:8)
  call char(132,#CHAR3100:2) // MM oben
  call char(134,#CHAR3104:2)
  call char(136,#CHAR3102:2) // MM unten 102,106
  call char(138,#CHAR3106:2)

  call color2(13,2,2,14,2,2,15,2,2,16,2,2)
  call color2(17,2,2,31,2,2)
  call hchar(1,1,16,768)
  for i=0 to 29
    if BL(i)=0 then call drawhouse(i,128) else call drawhouse(i,144)
  next i
  for i=0 to 9 :: GEnc(i)=9999 :: next i
  for i=0 to 4 :: call hchar(21,11+i,160+i,1)::next i
  call hchar(1,1,32,64) :: call hchar(22,1,32,96)
  call hchar(2,19,137,1) :: call hchar(2,20,138,1) :: call hchar(2,21,139,1)

  call magnify(3)
  call sprite(#1,116,9,145,121,#2,120,15,145,121,#3,88,16,226,1,0,50)
  call color2(13,2,13,14,2,13,15,2,10,16,2,10)
  call color2(17,2,12,31,16,2)
  call pkstart(pk)
  Ghost=16 :: GY = 0
  dr=0 :: GS=10
  x1=dx1 :: y1=dy1
  if hq=1 then display at(23,11):"Go to HQ!"
  repeat
    call position(#3,i,j)
    if j<128 then call color2(15,2,10,16,2,10) else call color2(15,2,13,16,2,13)
    call mod(x1,28,mx) :: call mod(y1,20,my)
    if mx=9 and my=5 then call joyst(1,x,y) :: call key(1,k,s) else k=0
    if x1=9   and x=-4 then x=0
    if x1=233 and x=4  then x=0
    if y1=145 and y=-4 and x1<>93 then y=0
    if x<>0 then y=0
    call gchar(y1/8+1-(y/2),max(x1/8+1+(x/2),1),e)
    if e=16 then x1=x1+x :: y1=y1-y ELSE gosub CalcHouse
    if e=16 and x+y<>0 then dr=dr+1
    call pkplus(pk,ac)
    if pk>10 and GY=0 and RND*200<PK and ghost<26 then gosub startghost
    if GY>0 then gosub MoveGhost
    if pk>pkmm then gosub Marshmallow
    if pk>=hp then gosub StartBlink
    if ass(4)=1 and abs(y1-(hny*8-7))<24 and abs(x1-(hnx*8-7))<40 then call hchar(hny,hnx,140) else call hchar(hny,hnx,136)
    call locate(#1,y1,x1,#2,y1,x1)
  until (house>0 and k=18 and HQ=0) OR (house=26 and k=18 and HQ=1) or pk>10000
  call delsprite(all)
  dx1=x1 :: dy1=y1
return

CalcHouse:
  house=0
  if y= 4 then house=((y1-25)/40)*6 + (x1+19)/56 // + 1
  if y=-4 then house=((y1+15)/40)*6 + (x1+19)/56 // + 1
  if x= 4 then house=((y1-5)/40)*6  + (x1-9)/56 + 1
  if x=-4 then house=((y1-5)/40)*6  + (x1-9)/56 // + 1
RETURN

startghost:
  gz = int(rnd*4)
  case gz of
    0 : begin
          gx=1 :: gy=120 + RND*40
        end
    1 : begin
          gx=RND*40+1 :: gy=160
        end
    2 : begin
          gx=240-RND*40 :: gy=160
        end
    3 : begin
          gx=240 :: gy= 120 + RND*40
        end
  endcase
  call sprite(#ghost,124-4*(gx>50),15,gy,gx)
  // GS=200+int((10000-PK)/25) :: GP=0
  GP=0
return

MoveGhost:
  GS=GS-1 :: if GS<1 then GP=GP+1 :: GS=5-int(pk/2000)
  call locate(#ghost,GY+GP*(9-GY)/160,GX+GP*(160-GX)/160)
  if GP=160 then  call delsprite(#ghost):: GY=0 :: pk=pk+100
  call coinc(#ghost,#1,10,GC)
  if GC then GY=0 :: GEnc(ghost-16)=dr :: Ghost=ghost+1
//  GP=GP+1
//  call locate(#ghost,GY+GP*(9-GY)/GS,GX+GP*(160-GX)/GS)
//  if GP=GS then  call delsprite(#ghost):: GY=0 :: pk=pk+100
//  call coinc(#ghost,#1,10,GC)
//  if GC then GY=0 :: GEnc(ghost-16)=dr :: Ghost=ghost+1
return

Marshmallow:
  i=1 :: e=0
  dx1=56*int(rnd*4)+38 :: dy1=int(rnd*3)+1
  call sprite(#5,132,15,1,dx1,#6,136,15,17,dx1)
  CALL DELAY(600)
  repeat
    call locate(#5,i*dy1,dx1,#6,i*dy1+16,dx1)
    call key(3,k,s)
    if k=66 and ass(2)=1 then e=-1 :: display at(23,9):"Bait applied!"
    i=i+1
    call delay(30)
    call pkplus(pk,ac)
  until i>40
  if e then ac=ac+20 :: goto MarshmallowEnd
  display at(23,8):"Building destroyed!"
  for i=1 to 10
    call char(136,#CHAR3108:4)
    call delay(250)
    call char(136,#CHAR3102:2,138,#CHAR3106:2)
    call delay(250)
    call pkplus(pk,ac)
  next i
  ac=max(0,ac-40)
  MarshmallowEnd:
  pkmm=pk+500+rnd*1000
  call delsprite(#5,#6)
  CALL HCHAR(23,10,32,20)
return

StartBlink:
  call drawhouse(HN,144)
  gosub NextBlinkHouse
return

NextBlinkHouse:
  bl(hn)=1 :: i=0
  ass(4)=abs(ass(4))
  while bl(hn)=1 and i<30
    HN=7+int(RND*3)*6+INT(RND*4)
    i=i+1
  wend
  if bl(hn)=1 then ass(4)=-ass(4)
  HNX=(hn-6*int(hn/6))*7-1
  HNY=int(hn/6)*5+2
  HP=PK+100+int(rnd*200)
RETURN


// *** DRIVE ***

drive:
  call clear
  call magnify(4)
  call char( 92,#CHAR3032:2)
  call char( 94,#CHAR3038:2)
  call char( 96,#CHAR3044:2)
  call char( 98,#CHAR3050:2)

  call char(100,#CHAR3034:2)
  call char(102,#CHAR3040:2)
  call char(104,#CHAR3046:2)
  call char(106,#CHAR3052:2)

  call char(108,#CHAR3036:2)
  call char(110,#CHAR3042:2)
  call char(112,#CHAR3048:2)
  call char(114,#CHAR3054:2)

  call sprite(#3, 92,15, 50,50,#4, 96,15, 50,82)
  call sprite(#5,100,15, 82,50,#6,104,15, 82,82)
  call sprite(#7,108,15,114,50,#8,112,15,114,82)

  call char(116,#CHAR3056:4)
  call char(120,#CHAR3060:4)
  call char(124,#CHAR3076:8)
  call sprite( #9,116,10,143,50,#10,116,10,143, 96)
  call sprite(#11,120,16, 49,50,#12,120,16, 49,100)
  call sprite(#1,124,16,194,1,#2,128,3, 53,66)
  if ass(3)=0 then call color(#2,1)

  call COLOR2(31,12,2)

  ghost=0
  drc=0
  x1=50
  gy=1
  gz=15
  dr2=25
  verz=20

  call pkstart(pk)
  call sprite(#1,124,16,194,1,0,0)

  repeat
    call joyst(1,x,y)
    if drc<dr then x1=x1+x/2 else x1=x1+2 :: if x1>180 then verz=verz+30
    if x1<1   then x1=2
    if x1>190 then x1=190
    x2=x1+32
    call locate(#3,50,x1,#4,50,x2,#5,82,x1,#6,82,x2,#7,114,x1,#8,114,x2)
    call locate(#9,143,x1,#10,143,x2+14,#11,49,x1,#12,49,x2+18,#2,53,x1+16)
    if gy<14 then le=min(11,gy) else le=24-gy
    call vchar(gy,9,16,le)
    if x1<62  and x1>10 then call vchar(8, 9,32,11)
    call vchar(gy,20,16,le)
    if x1<150 and x1>98 then call vchar(8,20,32,11)
    call vchar(gz,9,32,3) :: call vchar(gz,20,32,3)
    if gy>23 then gy=1 else gy=gy+1
    if gz>23 then gz=1 else gz=gz+1

    if drc=GEnc(ghost) then call sprite(#1,124,16,220,78+100*rnd,4,0)::ghost=ghost+1
    call key(1,k,s)
    call distance(#1,#2,GC) :: call position(#1,my,mx)
    if k=18 and GC<400 and ass(3)=1 then begin
      GP=GP+1
      if int(RND*2)=1 then gosub Ghostleft else gosub Ghostright
      if my>50 then call locate(#1,my-2,mx)
      call sound(-500,-6,8)
      if GP=15 then call sprite(#1,124,16,194,1,0,0)
    end else GP=0
    if my>180 and my<194 then pk=pk+100 :: call sprite(#1,124,16,194,1,0,0)
    call delay(verz)
    dr2=dr2-1 :: call pkplus(pk,ac)
    if dr2=0 then dr2=3 :: if my=0 then drc=drc+1
  until drc>dr and x1>=190 and verz>400
  call delay(1000)
  call delsprite(all)
return

Ghostleft:
  call char(124,#CHAR3076:4)
return

Ghostright:
  call char(124,#CHAR3072:4)
return

// *** HOUSE GHOST ***

HouseGhost:
  if pk>10000 then return
  call clear
  call magnify(4)

  call char( 92,#CHAR3000:8)
  call char(100,#CHAR3008:8)
  call char(108,#CHAR3016:8)
  call char(116,#CHAR3024:8)

  call COLOR2(29,5,15) // bricks
  call COLOR2(30,5,15) // bricks
  call COLOR2(31,12,2) // Yellow Beam

  for i=4 to 15
    call hchar(i,5,11,24)
  next i
  call hchar(16,1,10,32)
  for i=5 to 13 step 4
    for j=6 to 27 step 4
      call hchar(i,j,6,1)
      call hchar(i+1,j,7,1)
      call hchar(i,j+1,8,1)
      call hchar(i+1,j+1,9,1)
    next j
  next i

  if house=26 then gosub VisitHQ :: call delsprite(all) :: Return

  call sprite(#10,100,9,132,200)  // Buster 1
  call sprite(#13,112,11,140,200) // Trap
  call pkstart(pk)

  // speech: He slimed me!
//  a$=bin$("0498394c80e3752ab85705acfaae80955f1835538353ad25c0b7610cf8358301bfa513e0af7402fc9d4e805fda10705531cb33f37e4b75aac8dceb3cd49b3489ce16cb6e8ad85335264b288bc956f776ad1cda32d2938d6ae8f0084d3bea1133c2d56dab7bca")
//  b$=bin$("34956da5ed294254b785b6250e4ddf22f062a93a3a31a9a3f4d8543b046cd22d2b6c23b031d3887083c042d56a3a2923472a668fac0ced2d5cc5fa88718c080eed2bc6f17248bc0b01c66e47c02eee08d8a91c01cb972360bb72046c9f8e80edca10b06c28")
//  sp$=chr$(96) & chr$(0) & chr$(LEN(a$)+LEN(b$)) & a$ & b$
//
  state=1
  x=200
  gx=70
  gy=50

  if pk>=hp then bl(hn)=1 :: gosub NextBlinkHouse :: HP=PK+100+int(rnd*200)

  if bl(house)=0 then gosub NoGhostHere :: call delsprite(all) :: Return

  call sprite(#12,108,15-2*ass(4),50,150)  // Ghost Color 13 / 15
  repeat
    call key(1,k,s)
    if s=-1 then k=0
    call joyst(1,jx,jy)
    on state gosub state_buster1bait,state_buster1,state_buster2,state_beam,state_trap
    gxd = gxd + (rnd*11)-5
    gyd = gyd + (rnd*11)-5
    call position(#12,gy,gx)
    if gx<30  then gxd=rnd*10+1
    if gx>200 then gxd=-rnd*10-1
    if gy<30  then gyd=rnd*10+1
    if gy>70  then gyd=-rnd*10-1
    if state>3 then begin
      dx = gx - (x1+28 + (135-gy)/2)
      GBND=0
      if dx<-5 and dx>-20 then gxd=5 // :: call sound(-200,110,0) :: GBND=1
      if dx<-20 and dx>-40 then gxd=-5 // :: call sound(-200,220,0)

      dx = gx - (x2 - (135-gy)/2)
      if dx<5 and dx>-20 then gxd=-5 :: GBND = GBND+1 // :: call sound(-200,440,0)
      if dx>5 and dx<15 then gxd=5 // :: call sound(-200,880,0)
      if state<5 and x2-x1<125 then state=6 // streams crossed
    end
    if GBND=2 then GXD=0 :: GYD = 10
    if state<6 then call motion(#12,gyd,gxd)
    call pkplus(pk,ac)
    call delay(40)
  until state>5
  if state=6 then gosub StreamsCrossed
  call delsprite(all)
return

VisitHQ:
  call COLOR2(29,7,11) // bricks
  call COLOR2(30,7,11) // bricks  132
  call sprite(#10,104,9,110,120)
  call sprite(#11,104,9,100,100)
  call delay(500)
  for i=1 to 120 step 4
    call locate(#10,min(132,110+i/3),120+i)
    call locate(#11,min(132,100+i/3),100+i)
    call delay(80)
    call pkplus(pk,ac)
  next i
  hq=0 :: TR=ass(5)
return

state_buster1bait:
  x=max(x+jx,4)
  if jx<>0 then call pattern(#10,100-4*(jx=4))
  call locate(#10,132,x)
  call locate(#13,140,x)
  if k<>18 then return
  trx = int(x/8)*8+3
  call locate(#13,153,trx)
  state = state + 1
return

state_buster1:
  x=max(x+jx,4)
  if jx<>0 then call pattern(#10,100-4*(jx=4))
  call locate(#10,132,x)
  if k<>18 then return
  call pattern(#10,104)
  call sprite(#11,100,9,132,200)
  x1=x
  x=200
  state = state + 1
return

state_buster2:
  x=x+jx
  if jx<>0 then call pattern(#11,100-4*(jx=4))
  call locate(#11,132,x)
  if k<>18 then return
  call pattern(#11,100)
  x2 = x
  call sprite(#1,94,4,40,x2-60)
  call sprite(#2,94,4,72,x2-44)
  call sprite(#3,94,4,104,x2-28)

  call sprite(#4,98,4,40,x1+60)
  call sprite(#5,98,4,72,x1+44)
  call sprite(#6,98,4,104,x1+28)

  state = state + 1
return

state_beam:
  x1=x1-4*(jx=4)
  x2=x2+4*(jx=-4)
  if jx=4  then call locate(#10,132,x1,#4,40,x1+60,#5,72,x1+44,#6,104,x1+28)
  if jx=-4 then call locate(#11,132,x2,#1,40,x2-60,#2,72,x2-44,#3,104,x2-28)
  if k<>18 then return
  state=5
  try=123
  call sprite(#14,120,12,123,trx-6)
return

StreamsCrossed:
  call delsprite(#1,#2,#3,#4,#5,#6)
  call pattern(#10,116,#11,116)
  call motion(#12,-5,5)
  call disply(1,5,"You crossed the streams!")
  repeat
    call position(#12,gy,gx)
    call pkplus(pk,ac)
  until gy<5 or gx>250
  call delsprite(all)
  HQ=1
return

State_Trap:
  if try >20 then try=try-2 else state=8
  call locate(#14,try,trx-6)
  if try-int(try/8)*8=1 then begin
    call gchar(try/8+4,trx/8+2,c)
    call hchar(try/8+4,trx/8+2,16,1)
    bg$=bg$&chr$(c)
  end
  call distance(#12,#14,e)
  if e<800 or state=8 then begin
    for try=try to 123 step 2
      call locate(#14,try,trx-6)
      if state=8 then call locate(#12,gy-8+rnd*4,gx-8+rnd*4) else
                      call locate(#12,try,trx-9+rnd*6)
      if try-int(try/8)*8=1 then begin
        call hchar(try/8+4,trx/8+2,asc(seg$(bg$,len(bg$),1)))
        bg$=seg$(bg$,1,len(bg$)-1)
      end
      call delay(40)
      call pkplus(pk,ac)
    next try
    call delsprite(#12,#14,#1,#2,#3,#4,#5,#6)
    if state=8 then begin
      for i=1 to 132-gy
        call locate(#12,gy+i,gx+i*(x2-gx)/(132-gy))
        call pkplus(pk,ac)
        call delay(40)
      next i
      // call SAY("",sp$)
      call color(#11,3)
      call motion(#12,-5,5)
      repeat
        call position(#12,gy,gx)
        call pkplus(pk,ac)
      until gy<5 or gx>250
      pk=pk+300 :: HQ=1
      call delsprite(#12)
    end else call color(#13,3) :: ac=ac+6
    while x1<250
      x1=x1+4
      if x1=trx-3 then call locate(#13,140,trx) :: trx=trx+4
      call locate(#10,132,x1)
      if x1=x2-40 then call pattern(#11,104)
      if x2<x1-30 then call locate(#11,132,x2) :: x2=x2+4
      call pkplus(pk,ac)
      call delay(30)
    endwhile
    if HQ=0 then bl(house)=0 :: TR=TR-1 :: IF TR=0 then HQ=1
    call delsprite(#10,#11,#13)
    state=7
  end
return

NoGhostHere:
  call sprite(#11,100,9,132,230)  // Buster 2
  for i=1 to 70 step 4
    call locate(#10,132,200-i,#13,140,200-i,#11,132,230-i)
    call delay(80) :: call pkplus(pk,ac)
  next i
  call pattern(#10,104,#11,104)
  call delay(1000)
  for i=70 to 0 step -4
    call locate(#10,132,200-i,#13,140,200-i,#11,132,230-i)
    call delay(80) :: call pkplus(pk,ac)
  next i
return


final:
  call magnify(4)
  call clear
  call color2(18,4,13)
  call char(112,"80",113,"",114,"",115,"")
  call char(116,#CHAR3084:8)
  call char(124,#CHAR3092:8)
  call char2(176,#CHAR3116:6)
  call color2(19,5,1,20,15,1,29,2,14)
  call sprite(#1,116,16, 100,40,#2,120,16,132,40,#3,128,13,153,40)
  call sprite(#4,112,6,18*8-4,26*8-7)
  call hchar(20,1,169,32) :: call hchar(21,1,170,32)
  call hchar(18,26,180,1)
  call hchar(19,26,181,1)
  call disply(18,30,chr$(184)&chr$(186)&chr$(188))
  call disply(19,30,chr$(185)&chr$(187)&chr$(189))
  call hchar(18,28,182,2)
  call hchar(19,28,183,2)
  call disply(1,1,chr$(2)&chr$(3),32,10)
  call disply(1,2,chr$(4)&chr$(5),32,10)

  y1 = 0 :: x1 = 40 :: e = -50 :: gx=1
  x2 = 52 :: s1=0 :: J=-1 :: JY = 3
  repeat
    y1 = y1 + e :: e = e+1 :: x1=x1+gx
    call locate(#1,y1/75+98,x1,#2,y1/75+132,x1,#3,153,x1)
    if e=51 then e=-50 :: gx=-gx
    if e=0 then call pattern(#2,122+gx*2)
    call joyst(1,x,y)
    j=j+1
    if x<>0 and J>4 then begin
       s1=(s1=0) :: x2=min(x2+x/4,58)
       if x2<6 then gosub mmnext
       call hchar(18,x2/2+(x=4),32,2) :: call hchar(19,x2/2+(x=4),32,2)
       if s1=0 then call hchar(18,x2/2,180,1) :: call hchar(19,x2/2,181,1)
       if s1 then call hchar(18,x2/2,176,1) :: call hchar(19,x2/2,177,1)::call hchar(18,x2/2+1,178,1) :: call hchar(19,x2/2+1,179,1)
       call locate(#4,140,x2*4-3)
       j=0
    end
    call coinc(all,k)
    if k<>0 then gosub mmsmash
    call key(1,k,s)
  until s<>0 or jy<1
  call delsprite(all)
  call clear
  if jy<0 then return
  call disply(5,1,"Congratulations!")
  call disply(7,1,"You saved the city.")
  sp$=str$(ac) :: s=0
  call disply(10,1,"Your balance: "&sp$&"00$")
  gosub encode
  call disply(12,1,"Your new account number:")
  call disply(14,1,A$)

return

mmnext:
  call vchar(18,3,32,2)
  jy = jy - 1
  s1=0 :: X2=58-jy*2
return

mmsmash:
  call sound(-300,440,0)
  call hchar(18,x2/2-1,32,3) :: call hchar(19,x2/2-1,32,3)
  call char2(176,#CHAR3025,177,#CHAR3027)
  call disply(19,x2/2,chr$(176)&chr$(177))
  call disply(7,12,"Game Over!")
  repeat
    call key(1,k,s)
  until s=1
  jy=-1
return

encode:
  sp$=str$(ac) :: s=0
  sp$=rpt$("0",5-len(sp$))&SP$
  a$=chr$(int(rnd*10)+48)
  for i=1 to len(sp$)
    k=asc(seg$(sp$,i,1))+2+i
    if k>57 then k=k-10
    a$=a$&chr$(k)
    s=s+k-48
    a$=a$&chr$(int(rnd*10+48))
  next i
  a$=a$&chr$(48+s-int(s/10)*10)
return

decode:
  sp$="" :: s=0
  for i=2 to len(a$)-1 step 2
    k=asc(seg$(a$,i,1))
    s=s+k-48
    k=k-2-(i/2)
    if k<48 then k=k+10
    sp$=sp$&chr$(k)
  next i
  if chr$(48+s-int(s/10)*10)=seg$(a$,len(a$),1) then ac=val(sp$) else ac=0
return


sub drawhouse(h,b)
  r=int(h/6) :: c=h-6*r
  if c>0 then call hchar(r*5+1,c*7-3,b) :: call hchar(r*5+2,c*7-3,b+7) :: call hchar(r*5+3,c*7-3,b+6)
  if c>0 and c<5 then call hchar(r*5+1,c*7-2,b+1,3) :: call hchar(r*5+2,c*7-2,b+8,3) :: call hchar(r*5+3,c*7-2,b+5,3)
  if c<5 then call hchar(r*5+1,c*7+1,b+2) :: call hchar(r*5+2,c*7+1,b+3) :: call hchar(r*5+3,c*7+1,b+4)
subend


sub pkstart(pk)
  call sprite(#15,64,1,170,1,0,1+PK/2000)
  call disply(23,1,"PK          ")
  call disply(24,1,"$           ")
subend


sub pkplus(pk,ac)
  call position(#15,y,x)
  if x=1 then subexit
  pk = pk + x - 1
  call locate(#15,170,1)
  display at(23,1):PK;
  display at(24,1):str$(AC)&"00";
subend

// CALL SAY stuerzt compiliert ab
// MIDI Track aufbereiten
// Sound-Compiler und Auto-Player testen
// Error:
// - Map: no movement






